<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.service.mapper.ProjectMapper">

    <resultMap type="Project" id="ProjectResult">
        <result property="projectId"    column="project_id"    />
        <result property="projectTypeId"    column="project_type_id"    />
        <result property="projectTypeName"    column="project_type_name"    />
        <result property="projectName"    column="project_name"    />
        <result property="projectDetail"    column="project_detail"    />
        <result property="projectTech"    column="project_tech"    />
        <result property="createDate"    column="create_date"    />
        <result property="state"    column="state"    />
        <result property="remarks"    column="remarks"    />
    </resultMap>

    <sql id="selectProjectVo">
        select p.*,pr.project_type_name from project p left join project_type pr  on p.project_type_id=pr.project_type_id
    </sql>

    <select id="selectProjectList" parameterType="Project" resultMap="ProjectResult">
        <include refid="selectProjectVo"/>
        <where>
            <if test="projectTypeId != null "> and p.project_type_id = #{projectTypeId}</if>
            <if test="projectName != null "> and project_name like concat('%', #{projectName}, '%')</if>
            <if test="projectDetail != null  and projectDetail != ''"> and project_detail = #{projectDetail}</if>
            <if test="projectTech != null  and projectTech != ''"> and project_tech = #{projectTech}</if>
            <if test="createDate != null "> and p.create_date = #{createDate}</if>
            <if test="state != null "> and p.state = #{state}</if>
            <if test="remarks != null  and remarks != ''"> and p.remarks = #{remarks}</if>
        </where>
    </select>

    <select id="selectProjectById" parameterType="Long" resultMap="ProjectResult">
        <include refid="selectProjectVo"/>
        where p.project_id = #{projectId}
    </select>

    <insert id="insertProject" parameterType="Project" useGeneratedKeys="true" keyProperty="projectId">
        insert into project
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="projectTypeId != null">project_type_id,</if>
            <if test="projectName != null">project_name,</if>
            <if test="projectDetail != null and projectDetail != ''">project_detail,</if>
            <if test="projectTech != null and projectTech != ''">project_tech,</if>
            <if test="createDate != null">create_date,</if>
            <if test="state != null">state,</if>
            <if test="remarks != null">remarks,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="projectTypeId != null">#{projectTypeId},</if>
            <if test="projectName != null">#{projectName},</if>
            <if test="projectDetail != null and projectDetail != ''">#{projectDetail},</if>
            <if test="projectTech != null and projectTech != ''">#{projectTech},</if>
            <if test="createDate != null">#{createDate},</if>
            <if test="state != null">#{state},</if>
            <if test="remarks != null">#{remarks},</if>
         </trim>
    </insert>

    <update id="updateProject" parameterType="Project">
        update project
        <trim prefix="SET" suffixOverrides=",">
            <if test="projectTypeId != null">project_type_id = #{projectTypeId},</if>
            <if test="projectName != null">project_name = #{projectName},</if>
            <if test="projectDetail != null and projectDetail != ''">project_detail = #{projectDetail},</if>
            <if test="projectTech != null and projectTech != ''">project_tech = #{projectTech},</if>
            <if test="createDate != null">create_date = #{createDate},</if>
            <if test="state != null">state = #{state},</if>
            <if test="remarks != null">remarks = #{remarks},</if>
        </trim>
        where project_id = #{projectId}
    </update>

    <delete id="deleteProjectById" parameterType="Long">
        delete from project where project_id = #{projectId}
    </delete>

    <delete id="deleteProjectByIds" parameterType="String">
        delete from project where project_id in
        <foreach item="projectId" collection="array" open="(" separator="," close=")">
            #{projectId}
        </foreach>
    </delete>
</mapper>

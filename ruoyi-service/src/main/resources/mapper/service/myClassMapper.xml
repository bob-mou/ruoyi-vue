<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.service.mapper.myClassMapper">

    <resultMap type="myClass" id="myClassResult">
        <result property="classId"    column="class_id"    />
        <result property="className"    column="class_name"    />
        <result property="universityId" column="university_id"/>
        <result property="universityName" column="university_name"/>
        <result property="collegeId" column="college_id"/>
        <result property="collegeName" column="college_name"/>
        <result property="majorId" column="major_id"/>
        <result property="majorName" column="major_name"/>
        <result property="createDate"    column="create_date"    />
        <result property="state"    column="state"    />
        <result property="remarks"    column="remarks"    />
    </resultMap>

    <sql id="selectmyClassVo">
        select c.*,m.major_name,m.college_id,college.college_name,college.university_id,university_name from ((class c left join major m on c.major_id=m.major_id) left join college college on m.college_id = college.college_id) left join university university on college.university_id = university.university_id
    </sql>

    <select id="selectmyClassList" parameterType="myClass" resultMap="myClassResult">
        <include refid="selectmyClassVo"/>
        <where>
            <if test="collegeId != null"> and m.college_id = #{collegeId}</if>
            <if test="universityId != null "> and university.university_id = #{universityId}</if>
            <if test="className != null  and className != ''"> and c.class_name like concat('%', #{className}, '%')</if>
            <if test="majorId != null "> and c.major_id = #{majorId}</if>
        </where>
    </select>

    <select id="selectmyClassById" parameterType="Long" resultMap="myClassResult">
        <include refid="selectmyClassVo"/>
        where c.class_id = #{classId}
    </select>

    <insert id="insertmyClass" parameterType="myClass" useGeneratedKeys="true" keyProperty="classId">
        insert into class
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="className != null and className != ''">class_name,</if>
            <if test="majorId != null">major_id,</if>
            <if test="createDate != null">create_date,</if>
            <if test="state != null">state,</if>
            <if test="remarks != null">remarks,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="className != null and className != ''">#{className},</if>
            <if test="majorId != null">#{majorId},</if>
            <if test="createDate != null">#{createDate},</if>
            <if test="state != null">#{state},</if>
            <if test="remarks != null">#{remarks},</if>
         </trim>
    </insert>

    <update id="updatemyClass" parameterType="myClass">
        update class
        <trim prefix="SET" suffixOverrides=",">
            <if test="className != null and className != ''">class_name = #{className},</if>
            <if test="majorId != null">major_id = #{majorId},</if>
            <if test="createDate != null">create_date = #{createDate},</if>
            <if test="state != null">state = #{state},</if>
            <if test="remarks != null">remarks = #{remarks},</if>
        </trim>
        where class_id = #{classId}
    </update>

    <delete id="deletemyClassById" parameterType="Long">
        delete from class where class_id = #{classId}
    </delete>

    <delete id="deletemyClassByIds" parameterType="String">
        delete from class where class_id in
        <foreach item="classId" collection="array" open="(" separator="," close=")">
            #{classId}
        </foreach>
    </delete>
</mapper>

<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.service.mapper.MajorMapper">
    
    <resultMap type="Major" id="MajorResult">
        <result property="majorId"    column="major_id"    />
        <result property="majorName"    column="major_name"    />
        <result property="collegeId"    column="college_id"    />
        <result property="createDate"    column="create_date"    />
        <result property="state"    column="state"    />
        <result property="remarks"    column="remarks"    />
    </resultMap>

    <resultMap id="MajormyClassResult" type="Major" extends="MajorResult">
        <collection property="myClassList" notNullColumn="class_id" javaType="java.util.List" resultMap="myClassResult" />
    </resultMap>

    <resultMap type="myClass" id="myClassResult">
        <result property="classId"    column="class_id"    />
        <result property="className"    column="class_name"    />
        <result property="majorId"    column="major_id"    />
        <result property="createDate"    column="create_date"    />
        <result property="state"    column="state"    />
        <result property="remarks"    column="remarks"    />
    </resultMap>

    <sql id="selectMajorVo">
        select major_id, major_name, college_id, create_date, state, remarks from major
    </sql>

    <select id="selectMajorList" parameterType="Major" resultMap="MajorResult">
        <include refid="selectMajorVo"/>
        <where>  
            <if test="majorName != null  and majorName != ''"> and major_name like concat('%', #{majorName}, '%')</if>
            <if test="collegeId != null "> and college_id = #{collegeId}</if>
            <if test="state != null "> and state = #{state}</if>
        </where>
    </select>
    
    <select id="selectMajorById" parameterType="Long" resultMap="MajormyClassResult">
        select a.major_id, a.major_name, a.college_id, a.create_date, a.state, a.remarks,
            b.class_id, b.class_name, b.major_id, b.create_date, b.state, b.remarks
        from major a
        left join class b on b.major_id = a.major_id
        where a.major_id = #{majorId}
    </select>
        
    <insert id="insertMajor" parameterType="Major" useGeneratedKeys="true" keyProperty="majorId">
        insert into major
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="majorName != null and majorName != ''">major_name,</if>
            <if test="collegeId != null">college_id,</if>
            <if test="createDate != null">create_date,</if>
            <if test="state != null">state,</if>
            <if test="remarks != null">remarks,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="majorName != null and majorName != ''">#{majorName},</if>
            <if test="collegeId != null">#{collegeId},</if>
            <if test="createDate != null">#{createDate},</if>
            <if test="state != null">#{state},</if>
            <if test="remarks != null">#{remarks},</if>
         </trim>
    </insert>

    <update id="updateMajor" parameterType="Major">
        update major
        <trim prefix="SET" suffixOverrides=",">
            <if test="majorName != null and majorName != ''">major_name = #{majorName},</if>
            <if test="collegeId != null">college_id = #{collegeId},</if>
            <if test="createDate != null">create_date = #{createDate},</if>
            <if test="state != null">state = #{state},</if>
            <if test="remarks != null">remarks = #{remarks},</if>
        </trim>
        where major_id = #{majorId}
    </update>

    <delete id="deleteMajorById" parameterType="Long">
        delete from major where major_id = #{majorId}
    </delete>

    <delete id="deleteMajorByIds" parameterType="String">
        delete from major where major_id in 
        <foreach item="majorId" collection="array" open="(" separator="," close=")">
            #{majorId}
        </foreach>
    </delete>
    
    <delete id="deletemyClassByMajorIds" parameterType="String">
        delete from class where major_id in 
        <foreach item="majorId" collection="array" open="(" separator="," close=")">
            #{majorId}
        </foreach>
    </delete>

    <delete id="deletemyClassByMajorId" parameterType="Long">
        delete from class where major_id = #{majorId}
    </delete>

    <insert id="batchmyClass">
        insert into class( class_id, class_name, major_id, create_date, state, remarks) values
		<foreach item="item" index="index" collection="list" separator=",">
            ( #{item.classId}, #{item.className}, #{item.majorId}, #{item.createDate}, #{item.state}, #{item.remarks})
        </foreach>
    </insert>
</mapper>